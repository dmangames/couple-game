{"version":3,"sources":["heart.svg","App.js","data.js","reportWebVitals.js","index.js"],"names":["leftInput","rightInput","shuffledQuestions","array","t","i","m","length","Math","floor","random","shuffle","id","data","questionNumber","App","props","handleKeyPress","event","key","setState","left","keyCode","right","nextDirection","console","log","checkAnswer","state","leftAnswer","rightAnswer","animLeft","animRight","result","heartCount","bind","this","setTimeout","nextDirLeft","nextDirRight","document","addEventListener","removeEventListener","className","class","src","heart","alt","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"wPAAe,MAA0B,kCCarCA,G,MAAY,IACZC,EAAa,GAEbC,EAGJ,SAAiBC,GACf,IAAsBC,EAAGC,EAArBC,EAAIH,EAAMI,OAGd,KAAOD,GAGLD,EAAIG,KAAKC,MAAMD,KAAKE,SAAWJ,KAG/BF,EAAID,EAAMG,GACVH,EAAMG,GAAKH,EAAME,GACjBF,EAAME,GAAKD,EAGb,OAAOD,EAlBeQ,CChBN,CAChB,CAACC,GAAI,EAAGC,KAAM,uBACd,CAACD,GAAI,EAAGC,KAAM,4BACd,CAACD,GAAI,EAAGC,KAAM,sCACd,CAACD,GAAI,EAAGC,KAAM,wBACd,CAACD,GAAI,EAAGC,KAAM,0DACd,CAACD,GAAI,EAAGC,KAAM,qCACd,CAACD,GAAI,EAAGC,KAAM,gDACd,CAACD,GAAI,EAAGC,KAAM,6DACd,CAACD,GAAI,EAAGC,KAAM,6BACd,CAACD,GAAI,EAAGC,KAAM,6BACd,CAACD,GAAI,GAAIC,KAAM,6BACf,CAACD,GAAI,GAAIC,KAAM,0BACf,CAACD,GAAI,GAAIC,KAAM,kCACf,CAACD,GAAI,GAAIC,KAAM,wBACf,CAACD,GAAI,GAAIC,KAAM,6BACf,CAACD,GAAI,GAAIC,KAAM,0CACf,CAACD,GAAI,GAAIC,KAAM,wBACf,CAACD,GAAI,GAAIC,KAAM,mBACf,CAACD,GAAI,GAAIC,KAAM,2BACf,CAACD,GAAI,GAAIC,KAAM,oCACf,CAACD,GAAI,GAAIC,KAAM,2BACf,CAACD,GAAI,GAAIC,KAAM,8BACf,CAACD,GAAI,GAAIC,KAAM,kCACf,CAACD,GAAI,GAAIC,KAAM,qCACf,CAACD,GAAI,GAAIC,KAAM,+BACf,CAACD,GAAI,GAAIC,KAAM,kCACf,CAACD,GAAI,GAAIC,KAAM,wBACf,CAACD,GAAI,GAAIC,KAAM,6BACf,CAACD,GAAI,GAAIC,KAAM,iEACf,CAACD,GAAI,GAAIC,KAAM,+EACf,CAACD,GAAI,GAAIC,KAAM,wCACf,CAACD,GAAI,GAAIC,KAAM,qCACf,CAACD,GAAI,GAAIC,KAAM,sCACf,CAACD,GAAI,GAAIC,KAAM,2CACf,CAACD,GAAI,GAAIC,KAAM,2EACf,CAACD,GAAI,GAAIC,KAAM,oCACf,CAACD,GAAI,GAAIC,KAAM,6BACf,CAACD,GAAI,GAAIC,KAAM,qBACf,CAACD,GAAI,GAAIC,KAAM,sBACf,CAACD,GAAI,GAAIC,KAAM,oBACf,CAACD,GAAI,GAAIC,KAAM,oCACf,CAACD,GAAI,GAAIC,KAAM,uCACf,CAACD,GAAI,GAAIC,KAAM,2BACf,CAACD,GAAI,GAAIC,KAAM,0CACf,CAACD,GAAI,GAAIC,KAAM,0CACf,CAACD,GAAI,GAAIC,KAAM,sDACf,CAACD,GAAI,GAAIC,KAAM,oDACf,CAACD,GAAI,GAAIC,KAAM,0DACf,CAACD,GAAI,GAAIC,KAAM,sCACf,CAACD,GAAI,GAAIC,KAAM,oCACf,CAACD,GAAI,GAAIC,KAAM,mCACf,CAACD,GAAI,GAAIC,KAAM,4BACf,CAACD,GAAI,GAAIC,KAAM,gCACf,CAACD,GAAI,GAAIC,KAAM,wBACf,CAACD,GAAI,GAAIC,KAAM,iCACf,CAACD,GAAI,GAAIC,KAAM,gGACf,CAACD,GAAI,GAAIC,KAAM,4BACf,CAACD,GAAI,GAAIC,KAAM,4CACf,CAACD,GAAI,GAAIC,KAAM,oDACf,CAACD,GAAI,GAAIC,KAAM,qDACf,CAACD,GAAI,GAAIC,KAAM,6DACf,CAACD,GAAI,GAAIC,KAAM,2BACf,CAACD,GAAI,GAAIC,KAAM,uBACf,CAACD,GAAI,GAAIC,KAAM,wCACf,CAACD,GAAI,GAAIC,KAAM,2DACf,CAACD,GAAI,GAAIC,KAAM,8BACf,CAACD,GAAI,GAAIC,KAAM,sCACf,CAACD,GAAI,GAAIC,KAAM,2DACf,CAACD,GAAI,GAAIC,KAAM,qCACf,CAACD,GAAI,GAAIC,KAAM,kCACf,CAACD,GAAI,GAAIC,KAAM,iCACf,CAACD,GAAI,GAAIC,KAAM,8CACf,CAACD,GAAI,GAAIC,KAAM,iDACf,CAACD,GAAI,GAAIC,KAAM,qEACf,CAACD,GAAI,GAAIC,KAAM,8CACf,CAACD,GAAI,GAAIC,KAAM,6CACf,CAACD,GAAI,GAAIC,KAAM,yCACf,CAACD,GAAI,GAAIC,KAAM,uCACf,CAACD,GAAI,GAAIC,KAAM,6CACf,CAACD,GAAI,GAAIC,KAAM,mCACf,CAACD,GAAI,GAAIC,KAAM,mBACf,CAACD,GAAI,GAAIC,KAAM,8BACf,CAACD,GAAI,GAAIC,KAAM,qCACf,CAACD,GAAI,GAAIC,KAAM,oCACf,CAACD,GAAI,GAAIC,KAAM,iDACf,CAACD,GAAI,GAAIC,KAAM,uCACf,CAACD,GAAI,GAAIC,KAAM,8BACf,CAACD,GAAI,GAAIC,KAAM,oDACf,CAACD,GAAI,GAAIC,KAAM,yCACf,CAACD,GAAI,GAAIC,KAAM,qEACf,CAACD,GAAI,GAAIC,KAAM,wCACf,CAACD,GAAI,GAAIC,KAAM,8BACf,CAACD,GAAI,GAAIC,KAAM,uCACf,CAACD,GAAI,GAAIC,KAAM,wDACf,CAACD,GAAI,GAAIC,KAAM,0BACf,CAACD,GAAI,GAAIC,KAAM,6BACf,CAACD,GAAI,GAAIC,KAAM,0CACf,CAACD,GAAI,GAAIC,KAAM,kDACf,CAACD,GAAI,GAAIC,KAAM,kDACf,CAACD,GAAI,GAAIC,KAAM,mDACf,CAACD,GAAI,IAAKC,KAAM,0BAChB,CAACD,GAAI,IAAKC,KAAM,uBAChB,CAACD,GAAI,IAAKC,KAAM,6CAChB,CAACD,GAAI,IAAKC,KAAM,wBAChB,CAACD,GAAI,IAAKC,KAAM,sDAChB,CAACD,GAAI,IAAKC,KAAM,6BAChB,CAACD,GAAI,IAAKC,KAAM,uCAChB,CAACD,GAAI,IAAKC,KAAM,0CAChB,CAACD,GAAI,IAAKC,KAAM,uCAChB,CAACD,GAAI,IAAKC,KAAM,2BAChB,CAACD,GAAI,IAAKC,KAAM,sBAChB,CAACD,GAAI,IAAKC,KAAM,+BAChB,CAACD,GAAI,IAAKC,KAAM,sCAChB,CAACD,GAAI,IAAKC,KAAM,gDAChB,CAACD,GAAI,IAAKC,KAAM,uCAChB,CAACD,GAAI,IAAKC,KAAM,mDAChB,CAACD,GAAI,IAAKC,KAAM,wCAChB,CAACD,GAAI,IAAKC,KAAM,4CDrGdC,EAAiB,E,IAoJNC,E,kDA/Hb,WAAYC,GAAO,IAAD,8BAChB,cAAMA,IAyDRC,eAAiB,SAACC,GACD,MAAdA,EAAMC,KAA6B,KAAdnB,IACtBA,EAAY,KACZ,EAAKoB,SAAS,CAACC,KAAM,cAEN,MAAdH,EAAMC,KAA6B,KAAdnB,IACtBA,EAAY,UACZ,EAAKoB,SAAS,CAACC,KAAM,cAEF,KAAlBH,EAAMI,SAAiC,KAAfrB,IACzBA,EAAa,UACb,EAAKmB,SAAS,CAACG,MAAO,cAEH,KAAlBL,EAAMI,SAAiC,KAAfrB,IACzBA,EAAa,KACb,EAAKmB,SAAS,CAACG,MAAO,cAEH,KAAlBL,EAAMI,SACP,EAAKE,gBAEPC,QAAQC,IAAI,SAAW1B,EAAX,WAAyCC,GAErD,EAAK0B,eA9EH,EAAKC,MAAQ,CACXP,KAAM,GACNE,MAAO,GACPM,WAAY,+DACZC,YAAa,+DACbC,SAAU,GACVC,UAAW,GACXC,OAAQ,wBACRC,WAAY,GAEd,EAAKP,YAAc,EAAKA,YAAYQ,KAAjB,gBACnB,EAAKX,cAAgB,EAAKA,cAAcW,KAAnB,gBAbL,E,0DAgBJ,IAAD,OAEY,aAApBC,KAAKR,MAAMP,MAA4C,aAArBe,KAAKR,MAAML,QAC7B,OAAdvB,GAAqC,OAAfC,EAEvBmC,KAAKhB,SAAS,CAACa,OAAQ,gBACF,YAAdjC,GAA0C,YAAfC,EAElCmC,KAAKhB,SAAS,CAACa,OAAQ,UACF,OAAdjC,GAAqC,YAAfC,EAE7BmC,KAAKhB,SAAS,CAACa,OAAQ,qBAAsBC,WAAYE,KAAKR,MAAMM,WAAa,IAC5D,YAAdlC,GAA0C,OAAfC,GAElCmC,KAAKhB,SAAS,CAACa,OAAQ,eAAgBC,WAAYE,KAAKR,MAAMM,WAAa,IAE7EE,KAAKhB,SAAS,CAACC,KAAMrB,EAAWuB,MAAOtB,IAEvCoC,YAAW,WAAO,EAAKjB,SAAS,CAACa,OAAQ,4CAA6C,Q,sCAKxF,GAAGnB,GAAkBZ,EAAkBK,OAErC6B,KAAKhB,SAAS,CAACC,KAAM,qCAAsCE,MAAO,qCAAsCQ,SAAU,GAAIC,UAAW,GAAIH,WAAY,WAAYC,YAAa,WAAYG,OAAQ,4BAFhM,CAKAR,QAAQC,IAAI,cACZ,IAAIY,EAAcpC,EAAkBY,GAAgBD,KAChD0B,EAAerC,EAAkBY,GAAgBD,KACrDC,IACWwB,EACCC,EACZvC,EAAY,GACZC,EAAa,GACbmC,KAAKhB,SAAS,CAACC,KAAM,GAAIE,MAAO,GAAIQ,SAAU,GAAIC,UAAW,GAAIH,WAAYS,EAAaR,YAAaS,EAAcN,OAAQ,Q,0CAgC/HO,SAASC,iBAAiB,UAAWL,KAAKnB,kB,6CAI1CuB,SAASE,oBAAoB,UAAWN,KAAKnB,kB,+BAI3C,OACE,sBAAK0B,UAAU,MAAf,UACE,wBAAQA,UAAU,aAAlB,SACE,+CAEF,sBAAKA,UAAU,OAAf,UACE,qBAAKC,MAAM,QAAX,SACE,qBAAKC,IAAKC,EAAOC,IAAI,YAEvB,qBAAKH,MAAM,aAAX,SACGR,KAAKR,MAAMM,aAEd,qBAAKS,UAAU,UAAf,SACE,sBAAKA,UAAU,UAAf,UACE,mBAAG/B,GAAG,WAAN,8CACA,oBAAIA,GAAG,YAAYgC,MAAOR,KAAKR,MAAMG,SAArC,SAAgDK,KAAKR,MAAMC,aAC3D,oBAAIjB,GAAG,YAAYgC,MAAOR,KAAKR,MAAMG,SAArC,SAAgDK,KAAKR,MAAMP,YAG/D,qBAAKsB,UAAU,WAAf,SACE,sBAAKA,UAAU,UAAf,UACE,mBAAG/B,GAAG,YAAN,oDACA,oBAAIA,GAAG,aAAagC,MAAOR,KAAKR,MAAMI,UAAtC,SAAkDI,KAAKR,MAAME,cAC7D,oBAAIlB,GAAG,aAAagC,MAAOR,KAAKR,MAAMI,UAAtC,SAAkDI,KAAKR,MAAML,aAGjE,qBAAKX,GAAG,SAAR,SACGwB,KAAKR,MAAMK,mB,GAxHNe,IAAMC,WEzBTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFrB,SAASsB,eAAe,SAM1BZ,M","file":"static/js/main.2a6bc292.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/heart.de70e8ec.svg\";","import heart from './heart.svg'\nimport './App.css';\nimport React from 'react';\nimport questions from './data.js';\n\n//couple game is just a screen split into two.\n//each person looks only at their side of the screen\n//there will be a word on that screen\n//if the couple has a strong bond then they will be able to work together to beat the game\n//\n\nlet leftAnswer = \"up\";\nlet rightAnswer = \"up\";\nlet leftInput = \"\";\nlet rightInput = \"\";\nconst firstSet = [\"up\", \"down\", \"left\", \"right\"];\nlet shuffledQuestions = shuffle(questions);\nlet questionNumber = 0;\n\nfunction shuffle(array) {\n  var m = array.length, t, i;\n\n  // While there remain elements to shuffle…\n  while (m) {\n\n    // Pick a remaining element…\n    i = Math.floor(Math.random() * m--);\n\n    // And swap it with the current element.\n    t = array[m];\n    array[m] = array[i];\n    array[i] = t;\n  }\n\n  return array;\n}\n\nclass App extends React.Component{\n  constructor(props){\n    super(props);\n    this.state = {\n      left: \"\",\n      right: \"\",\n      leftAnswer: \"The question will appear here. Respond with 'Me' to continue\",\n      rightAnswer: \"The question will appear here. Respond with 'Me' to continue\",\n      animLeft: \"\",\n      animRight: \"\",\n      result: \"Result displayed here\",\n      heartCount: 0,\n    };\n    this.checkAnswer = this.checkAnswer.bind(this);\n    this.nextDirection = this.nextDirection.bind(this);\n  }\n\n  checkAnswer(){\n    //both have to have answered to move on\n    if(this.state.left === \"answered\" && this.state.right === \"answered\"){\n      if(leftInput === \"me\" && rightInput === \"me\"){\n        //it's me\n        this.setState({result: \"ME! ME! ME!\"});\n      }else if(leftInput === \"partner\" && rightInput === \"partner\"){\n        //it's you\n        this.setState({result: \"No U!\"});\n      }else if(leftInput === \"me\" && rightInput === \"partner\"){\n        //it's left\n        this.setState({result: \"<- That's the one!\", heartCount: this.state.heartCount + 1});\n      }else if(leftInput === \"partner\" && rightInput === \"me\"){\n        //it's right\n        this.setState({result: \"Yep, it's ->\", heartCount: this.state.heartCount + 1});\n      }\n      this.setState({left: leftInput, right: rightInput});\n      //press space to continue\n      setTimeout(() => {this.setState({result: \"Press spacebar to go to next question\"});}, 3000);\n    }\n  }\n\n  nextDirection(){\n    if(questionNumber >= shuffledQuestions.length){\n      //all questions finished\n      this.setState({left: \"You've finished all the questions!\", right: \"You've finished all the questions!\", animLeft: \"\", animRight: \"\", leftAnswer: \"Score ->\", rightAnswer: \"<- Score\", result: \"Thanks for playing!\"});\n      return;\n    }\n    console.log(\"Reset Anim\");\n    var nextDirLeft = shuffledQuestions[questionNumber].data;\n    var nextDirRight = shuffledQuestions[questionNumber].data;\n    questionNumber++;\n    leftAnswer=nextDirLeft;\n    rightAnswer=nextDirRight;\n    leftInput = \"\";\n    rightInput = \"\";\n    this.setState({left: \"\", right: \"\", animLeft: \"\", animRight: \"\", leftAnswer: nextDirLeft, rightAnswer: nextDirRight, result: \"\"});\n  }\n\n\n\n\n  handleKeyPress = (event) => {\n  if(event.key === 's' && leftInput === \"\"){\n    leftInput = 'me';\n    this.setState({left: \"answered\"});\n  }\n  if(event.key === 'd' && leftInput === \"\"){\n    leftInput = 'partner';\n    this.setState({left: \"answered\"});\n  }\n  if(event.keyCode === 37 && rightInput === \"\"){\n    rightInput = 'partner';\n    this.setState({right: \"answered\"});\n  }\n  if(event.keyCode === 40 && rightInput === \"\"){\n    rightInput = 'me';\n    this.setState({right: \"answered\"});\n  }\n  if(event.keyCode === 32){\n    this.nextDirection();\n  }\n  console.log(\"Left: \" + leftInput + \" \" + \"Right: \" + rightInput);\n  // this.setState({left: leftInput, right: rightInput});\n  this.checkAnswer();\n}\n\ncomponentDidMount() {\n  document.addEventListener(\"keydown\", this.handleKeyPress);\n}\n\ncomponentWillUnmount() {\n  document.removeEventListener(\"keydown\", this.handleKeyPress);\n}\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <h1>Couple Game</h1>\n        </header>\n        <div className=\"game\">\n          <div class=\"heart\">\n            <img src={heart} alt=\"heart\"/>\n          </div>\n          <div class=\"heartCount\">\n            {this.state.heartCount}\n          </div>\n          <div className=\"leftBox\">\n            <div className=\"content\">\n              <p id=\"leftInfo\">Press S for Me and D for Partner</p>\n              <h3 id=\"leftOrder\" class={this.state.animLeft}>{this.state.leftAnswer}</h3>\n              <h2 id=\"leftInput\" class={this.state.animLeft}>{this.state.left}</h2>\n            </div>\n          </div>\n          <div className=\"rightBox\">\n            <div className=\"content\">\n              <p id=\"rightInfo\">Press Down for Me and Left for Partner</p>\n              <h3 id=\"rightOrder\" class={this.state.animRight}>{this.state.rightAnswer}</h3>\n              <h2 id=\"rightInput\" class={this.state.animRight}>{this.state.right}</h2>\n            </div>\n          </div>\n          <div id=\"result\">\n            {this.state.result}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const questions = [\r\n  {id: 0, data: 'Who is the vainest?'},\r\n  {id: 1, data: 'Who’s the funniest?'},\r\n  {id: 2, data: 'Who has the better taste in music?'},\r\n  {id: 3, data: 'Who is the messiest?'},\r\n  {id: 4, data: 'Who’s more likely to sleep in before a big event?'},\r\n  {id: 5, data: 'Who has the worst morning breath?'},\r\n  {id: 6, data: 'Who is more likely to forget an anniversary?'},\r\n  {id: 7, data: 'Who is more likely to admit when they’ve been wrong?'},\r\n  {id: 8, data: 'Who is the most romantic?'},\r\n  {id: 9, data: 'Who has the worse temper?'},\r\n  {id: 10, data: 'Who is the better kisser?'},\r\n  {id: 11, data: 'Who has the most exes?'},\r\n  {id: 12, data: 'Who has the worst handwriting?'},\r\n  {id: 13, data: 'Who smells the best?'},\r\n  {id: 14, data: 'Who is the better driver?'},\r\n  {id: 15, data: 'Who said ‘I love you’ first?'},\r\n  {id: 16, data: 'Who is the smartest?'},\r\n  {id: 17, data: 'Who farts more?'},\r\n  {id: 18, data: 'Who is the better cook?'},\r\n  {id: 19, data: 'Who handles hangovers the worst?'},\r\n  {id: 20, data: 'Who is the best dancer?'},\r\n  {id: 21, data: 'Who is the loudest in bed?'},\r\n  {id: 22, data: 'Who is better at saving money?'},\r\n  {id: 23, data: 'Who is better at keeping secrets?'},\r\n  {id: 24, data: 'Who is the worst influence?'},\r\n  {id: 25, data: 'Who takes longer to get ready?'},\r\n  {id: 26, data: 'Who is the bossiest?'},\r\n  {id: 27, data: 'Who takes longer to poop?'},\r\n  {id: 28, data: 'Who is more likely to get a dog to surprise the other person?'},\r\n  {id: 29, data: 'Who is more likely to lick Cheeto dust off the other person’s fingers?'},\r\n  {id: 30, data: 'Who will get drunk first at a party?'},\r\n  {id: 31, data: 'Who was the first to ask for sex?'},\r\n  {id: 32, data: 'Who is more likely to crash a car?'},\r\n  {id: 33, data: 'Who would you send to haggle for a car?'},\r\n  {id: 34, data: 'Who is more likely to hug a tree to protect it from being chopped down?'},\r\n  {id: 35, data: 'Who is more likely to buy a gun?'},\r\n  {id: 36, data: 'Who does the most chores?'},\r\n  {id: 37, data: 'Who sings better?'},\r\n  {id: 38, data: 'Who twerks better?'},\r\n  {id: 39, data: 'Who raps better?'},\r\n  {id: 40, data: 'Who is more physically flexible?'},\r\n  {id: 41, data: 'Who has the more flexible schedule?'},\r\n  {id: 42, data: 'Who is the breadwinner?'},\r\n  {id: 43, data: 'Who would make more money on OnlyFans?'},\r\n  {id: 44, data: 'Who would get caught stalking someone?'},\r\n  {id: 45, data: 'Who would eat Donald Trump’s booger for $100?'},\r\n  {id: 46, data: 'Who would win the lottery and not know about it?'},\r\n  {id: 47, data: 'Who would throw away an entire dinner to make a point?'},\r\n  {id: 48, data: 'Who has the most speeding tickets?'},\r\n  {id: 49, data: 'Who has better grades in school?'},\r\n  {id: 50, data: 'Who was the teacher’s pet?'},\r\n  {id: 51, data: 'Who kills the cockroach?'},\r\n  {id: 52, data: 'Who brings in the cockroach?'},\r\n  {id: 53, data: 'Who has better hair?'},\r\n  {id: 54, data: 'Who would cut their own hair?'},\r\n  {id: 55, data: 'Who would accidentally bump into someone’s car in the parking lot and not leave a note?'},\r\n  {id: 56, data: 'Who lasts longer in bed?'},\r\n  {id: 57, data: 'Who would lie to get something for free?'},\r\n  {id: 58, data: 'Who would survive longer in a zombie apocalypse?'},\r\n  {id: 59, data: 'Who would run a red light to make an appointment?'},\r\n  {id: 60, data: 'Who is more likely to give a homeless guy a lot of money?'},\r\n  {id: 61, data: 'Who donates more blood?'},\r\n  {id: 62, data: 'Who eats healthier?'},\r\n  {id: 63, data: 'Who would run the better restaurant?'},\r\n  {id: 64, data: 'Who would lie to a cop to get out of a speeding ticket?'},\r\n  {id: 65, data: 'Who can spit the furthest?'},\r\n  {id: 66, data: 'Who would overdose on gummy bears?'},\r\n  {id: 67, data: 'Who will be the first to have diarrhea after this game?'},\r\n  {id: 68, data: 'Who is more open to foreign food?'},\r\n  {id: 69, data: 'Who would get plastic surgery?'},\r\n  {id: 70, data: 'Who gives the better massage?'},\r\n  {id: 71, data: 'Who would be most likely to become Batman?'},\r\n  {id: 72, data: 'Who would be most likely to become president?'},\r\n  {id: 73, data: 'Who forgets to put the cap back on the fuel tank after refueling?'},\r\n  {id: 74, data: 'Who makes funny faces at security cameras?'},\r\n  {id: 75, data: 'Who is more likely to get stopped by TSA?'},\r\n  {id: 76, data: 'Who can climb up highest on a ladder?'},\r\n  {id: 77, data: 'Who would ask for directions first?'},\r\n  {id: 78, data: 'Who would be running through the airport?'},\r\n  {id: 79, data: 'Who would get on the wrong bus?'},\r\n  {id: 80, data: 'Who is luckier?'},\r\n  {id: 81, data: 'Who can eat more icecream?'},\r\n  {id: 82, data: 'Who would walk into a glass door?'},\r\n  {id: 83, data: 'Who would make a better pilgrim?'},\r\n  {id: 84, data: 'Who would be the better kindergarten teacher?'},\r\n  {id: 85, data: 'Who can make a fire out of nothing?'},\r\n  {id: 86, data: 'Who would get Covid first?'},\r\n  {id: 87, data: 'Who could talk a suicidal person off the bridge?'},\r\n  {id: 88, data: 'Who will have a midlife crisis first?'},\r\n  {id: 89, data: 'Who is more likely to buy something from a door to door salesman?'},\r\n  {id: 90, data: 'Who is more likely to join a circus?'},\r\n  {id: 91, data: 'Who has the bigger family?'},\r\n  {id: 92, data: 'Who remembers the important things?'},\r\n  {id: 93, data: 'Who could go the longest eating nothing but bananas?'},\r\n  {id: 94, data: 'Who knows more people?'},\r\n  {id: 95, data: 'Whose friends are richer?'},\r\n  {id: 96, data: 'Who would get further on a tight rope?'},\r\n  {id: 97, data: 'Who could build the better house from scratch?'},\r\n  {id: 98, data: 'Who can keep a tomato plant alive the longest?'},\r\n  {id: 99, data: 'Who has spent more time staring out of windows?'},\r\n  {id: 100, data: 'Who spends more money?'},\r\n  {id: 101, data: 'Who is more clumsy?'},\r\n  {id: 102, data: 'Who buys more things they don’t use?'},\r\n  {id: 103, data: 'Who eats more ramen?'},\r\n  {id: 104, data: 'Who is more likely to get upgraded to first class?'},\r\n  {id: 105, data: 'Who would win in a fight?'},\r\n  {id: 106, data: 'Who would be the Pokémon master?'},\r\n  {id: 107, data: 'Who can go without coffee the longest?'},\r\n  {id: 108, data: 'Who spends more time on the toilet?'},\r\n  {id: 109, data: 'Who would write a book?'},\r\n  {id: 110, data: 'Who eats out more?'},\r\n  {id: 111, data: 'Who looks for coupons more?'},\r\n  {id: 112, data: 'Who could pull off robbing a bank?'},\r\n  {id: 113, data: 'Who would win who wants to be a millionaire?'},\r\n  {id: 114, data: 'Who would be sorted into Slytherin?'},\r\n  {id: 115, data: 'Who would get a tattoo of the magic school bus?'},\r\n  {id: 116, data: 'Who can go without WiFi the longest?'},\r\n  {id: 117, data: 'Who can hold their breath the longest?'},\r\n];\r\n\r\nexport default questions;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}